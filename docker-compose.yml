version: '3.8'

services:
  postgressdb:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=cars
    ports:
      - 5432:5432
    networks:
      - shared-network
    volumes:
      - config_file:/etc/postgresql/postgresql.conf
      - pgdata:/var/lib/postgresql/data
      - ./db/backup/files:/data_backup/data

  nginx:
    image: nginx:latest
    container_name: nginx-prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    command: /bin/sh -c "nginx -g 'daemon off;'"
    depends_on:
      api-prod:
        condition: service_healthy
      app-prod:
        condition: service_started
    networks:
      - shared-network

  api_prod:
    container_name: nest_api_prod
    image: nest-api-prod:1.0.0
    build:
      context: nest-cars-api
      target: production
      dockerfile: Dockerfile
    command: sh -c './bin/wait-for -t 0 postgressdb:5432 -- yarn start:prod'
    ports:
      - 3001:3001
    networks:
      - shared-network
    depends_on:
      - postgressdb
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', 'http://api-prod:3001']
      interval: 5s
      timeout: 3s
      retries: 6

  app-prod:
    container_name: react_app_prod
    image: react-app-prod:1.0.0
    build:
      context: react-cars-app
      target: production
      dockerfile: Dockerfile
    command: yarn start:prod
    ports:
      - 3000:3000
    networks:
      - shared-network
    restart: unless-stopped

networks:
  shared-network:

volumes:
  config_file:
  pgdata:
